# Generated by Django 4.2.5 on 2023-12-01 13:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BatteryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_number', models.CharField(max_length=50)),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('voltage', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Inflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iteration', models.BigIntegerField(blank=True, db_column='Iteration', null=True)),
                ('cputime', models.BigIntegerField(blank=True, db_column='CPUTime', null=True)),
                ('phystime', models.BigIntegerField(blank=True, db_column='PhysTime', null=True)),
                ('travels', models.FloatField(blank=True, db_column='Travels', null=True)),
                ('value', models.FloatField(blank=True, db_column='Value', null=True)),
                ('avvalue', models.FloatField(blank=True, db_column='AvValue', null=True)),
                ('minvalue', models.FloatField(blank=True, db_column='MinValue', null=True)),
                ('maxvalue', models.FloatField(blank=True, db_column='MaxValue', null=True)),
                ('delta', models.FloatField(blank=True, db_column='Delta', null=True)),
                ('criteria', models.FloatField(blank=True, db_column='Criteria', null=True)),
                ('prevavrefvalue', models.BigIntegerField(blank=True, db_column='PrevAvRefValue', null=True)),
                ('progress', models.FloatField(blank=True, db_column='Progress', null=True)),
                ('criteriatype', models.BigIntegerField(blank=True, db_column='CriteriaType', null=True)),
                ('criteriavartype', models.BigIntegerField(blank=True, db_column='CriteriaVarType', null=True)),
                ('criteriapercentage', models.BigIntegerField(blank=True, db_column='CriteriaPercentage', null=True)),
                ('datetime', models.DateField(blank=True, db_column='Date', null=True)),
                ('batteryid', models.BigIntegerField(blank=True, db_column='batteryID', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Outflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iteration', models.BigIntegerField(blank=True, db_column='Iteration', null=True)),
                ('cputime', models.BigIntegerField(blank=True, db_column='CPUTime', null=True)),
                ('phystime', models.BigIntegerField(blank=True, db_column='PhysTime', null=True)),
                ('travels', models.FloatField(blank=True, db_column='Travels', null=True)),
                ('value', models.FloatField(blank=True, db_column='Value', null=True)),
                ('avvalue', models.FloatField(blank=True, db_column='AvValue', null=True)),
                ('minvalue', models.FloatField(blank=True, db_column='MinValue', null=True)),
                ('maxvalue', models.FloatField(blank=True, db_column='MaxValue', null=True)),
                ('delta', models.FloatField(blank=True, db_column='Delta', null=True)),
                ('criteria', models.FloatField(blank=True, db_column='Criteria', null=True)),
                ('prevavrefvalue', models.BigIntegerField(blank=True, db_column='PrevAvRefValue', null=True)),
                ('progress', models.BigIntegerField(blank=True, db_column='Progress', null=True)),
                ('criteriatype', models.BigIntegerField(blank=True, db_column='CriteriaType', null=True)),
                ('criteriavartype', models.BigIntegerField(blank=True, db_column='CriteriaVarType', null=True)),
                ('criteriapercentage', models.BigIntegerField(blank=True, db_column='CriteriaPercentage', null=True)),
                ('datetime', models.DateField(blank=True, db_column='Date', null=True)),
                ('batteryid', models.BigIntegerField(blank=True, db_column='batteryID', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pump',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w', models.FloatField(blank=True, db_column='W', null=True)),
                ('v', models.FloatField(blank=True, db_column='V', null=True)),
                ('a', models.FloatField(blank=True, db_column='A', null=True)),
                ('flow_l_min', models.FloatField(blank=True, db_column='flow', null=True)),
                ('r_sec', models.BigIntegerField(blank=True, db_column='rPersec', null=True)),
                ('temp_field', models.FloatField(blank=True, db_column='Temp', null=True)),
                ('datetime', models.DateField(blank=True, db_column='Date', null=True)),
                ('batteryid', models.BigIntegerField(blank=True, db_column='batteryID', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_datetime', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='')),
                ('upload_type', models.CharField(choices=[('New', 'New'), ('Edited', 'Edited')])),
                ('file_category', models.CharField(choices=[('Battery Module', 'Battery Module'), ('Simulation', 'Simulation')])),
                ('file_type', models.CharField(choices=[('Inlet', 'Inlet'), ('Outlet', 'Outlet'), ('Pump', 'Pump'), ('Type 1', 'Type 1'), ('Type 2', 'Type 2')])),
                ('file_date', models.DateField()),
                ('file_name', models.CharField(max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
